bit rel_op(int pkt_1, int constant, int opcode) {
  assert((opcode == 1) || (opcode == 2) || (opcode == 3));
  if (opcode == 1) {
    return pkt_1 != constant;
  } else if (opcode == 2) {
    return pkt_1 < constant;
  } else if (opcode == 3) {
    return pkt_1 > constant;
  }
}

StateResult atom_template(int state_1, int state_2, int pkt_1, int pkt_2, int pkt_3, int pkt_4, int pkt_5) {
  if (??) {
    state_1 = ??;
  } else if (??) {
    state_1 = pkt_1;
  } else if (??) {
    state_1 += ??;
  } else if (??) {
    state_1 -= ??;
  } else if (??) {
    bit predicate = rel_op(pkt_1, ??, ??);
    if (predicate) state_1 += pkt_1;
  } else if (??) {
    state_1 += pkt_1;
  } else if (??) {
    bit predicate = rel_op(pkt_2, ??, ??);
    if (predicate) state_1 += pkt_1;
  }
  StateResult ret = new StateResult();
  ret.result_state_1 = state_1;
  ret.result_state_2 = state_2;
  return ret;
}
